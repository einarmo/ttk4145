What is concurrency? What is paralellism? What is the difference?
    Both involve a way of scheduling processes so that they run at the same time. The difference is in how they do it. Concurrency is running multiple processes on a single physical core, switching between processes rapidly to give an illusion of simultaneity.
    Paralellism runs two processes on two different cores, and so the processes may run simultaneously in a greater sense.
    For a higher level programmer there is often little difference between the two. (Case in point, a modern virtual computer may have virtual cores not corresponding to physical cores at all). The practical difference ends up being core-exclusive cache and locality.

Why have machines become increasingly multicore in the last decade?
    For a while we were able to double processor speeds every 18 months. A few decades ago, however, we found that reducing the size of transistors or improving pipelining becaome increasingly impossible. To keep increasing effective processing speed, paralellism is one viable solution, and because of this Moore's law technically still holds.


